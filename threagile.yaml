threagile_version: "1.0.0"

title: "React.js Application Threat Model"
date: "2025-09-11"
author:
  name: "Your Name"
  homepage: "https://your-company.com"

business_criticality: "high"
business_overview:
  description: |
    A single-page application (SPA) built with React.js that provides an interactive
    user interface. It communicates with a separate backend API to fetch and
    manipulate data.
  tags_available:
    - "react-app"
    - "spa"
    - "api"
    - "frontend"
    - "backend"

data_assets:
  user_session_token:
    description: "Authentication token stored in browser storage."
    data_format: "JWT"
    quantity: "many"
    value: "high"
    is_sensitive: true
    origin: "system"
    owner: "DevOps Team"

  user_data:
    description: "User profile information."
    data_format: "JSON"
    quantity: "hundreds"
    value: "high"
    is_sensitive: true
    origin: "user"
    owner: "Product Team"

technical_assets:
  # The React.js frontend, served as static files
  react_frontend:
    description: "The static React.js files (HTML, CSS, JS) served to the user's browser."
    type: "web-client"
    usage: "frontend"
    technology: "React.js"
    tags:
      - "react-app"
      - "spa"
      - "frontend"
    confidentiality: "low"
    availability: "high"
    integrity: "medium"
    communication_links:
      - target: "backend_api"
        protocol: "https"
        description: "API calls to the backend."
        data_assets_sent:
          - "user_session_token"
          - "user_data"
        data_assets_received:
          - "user_data"

  # The Web Server hosting the static files
  static_file_server:
    description: "Web server that serves the static React.js files."
    type: "web-server"
    usage: "frontend"
    technology: "Nginx"
    communication_links:
      - target: "react_frontend"
        protocol: "https"
        description: "Serves static files to the browser."

  # The Backend API
  backend_api:
    description: "RESTful API handling business logic and data persistence."
    type: "application"
    usage: "backend"
    technology: "Node.js"
    tags:
      - "api"
      - "backend"
    confidentiality: "high"
    availability: "high"
    integrity: "high"
    communication_links:
      - target: "database"
        protocol: "tcp"
        description: "Queries and updates the database."
        data_assets_sent:
          - "user_data"
        data_assets_received:
          - "user_data"

  # The Database
  database:
    description: "Database storing all user and application data."
    type: "datastore"
    usage: "backend"
    technology: "PostgreSQL"
    confidentiality: "very-high"
    availability: "high"
    integrity: "very-high"
    data_assets_stored:
      - "user_data"

trust_boundaries:
  # This boundary separates the public internet from the static file server
  public_internet_boundary:
    description: "Separates the user's browser from the web server."
    type: "network-boundary"
    technical_assets_separated:
      - "static_file_server"
      - "internet"

  # This boundary separates the frontend from the backend
  frontend_backend_boundary:
    description: "Separates the frontend client (in the browser) from the backend API."
    type: "network-boundary"
    technical_assets_separated:
      - "react_frontend"
      - "backend_api"

  # This boundary separates the backend from the database
  internal_api_boundary:
    description: "Separates the backend API from the database."
    type: "network-boundary"
    technical_assets_separated:
      - "backend_api"
      - "database"
